里式替换原则还有另外一个更加能落地、更有指导意义的描述，那就是“Design
By Contract”，中文翻译就是“按照协议来设计”。
看起来比较抽象，我来进一步解读一下。子类在设计的时候，要遵守父类的行为约定（或者
叫协议）。父类定义了函数的行为约定，那子类可以改变函数的内部实现逻辑，但不能改变
函数原有的行为约定。这里的行为约定包括：函数声明要实现的功能；对输入、输出、异常
的约定；甚至包括注释中所罗列的任何特殊说明。实际上，定义中父类和子类之间的关系，
也可以替换成接口和实现类之间的关系。


违反里式替换的例子：
1. 子类违背父类声明要实现的功能
2. 子类违背父类对输入、输出、异常的约定
3. 子类违背父类注释中所罗列的任何特殊说明