server:
  port: 10000
  servlet:
    context-path: /user
spring:
  application:
    name: nacos-config-sentinel-user
  cloud:
    sentinel:
      enabled: true
      transport:
        # 暂时不能使用云上的sentinel, 因为云上的不能访问本地服务获取信息
        dashboard: http://localhost:9999 # sentinel看板的地址
      eager: true # 开启对sentinel看板的饥饿式加载。sentinel默认是懒加载机制，只有访问过一次的资源才会被监控，通过关闭懒加载，在项目启动时就连接sentinel控制台
      # sentinel数据源， 获取外部存储的限流规则
      datasource:
        ds:
          nacos:
            serverAddr: ${spring.cloud.nacos.discovery.server-addr}
            username: nacos
            password: nacos
            namespace: dev
            ruleType: flow
            dataId: ${spring.application.name}-sentinel.json
            data-type: json

    nacos:
      discovery:
        service: ${spring.application.name}
        server-addr: http://tx-gd:8948
        username: nacos
        password: nacos
        register-enabled: true # 是否注册，消费者一般不需要注册
        namespace: dev # 命名空间
        instance-enabled: true
        metadata:
          management:
            context-path: ${server.servlet.context-path}/actuator

      config:
        enabled: true
        server-addr: http://tx-gd:8948
        username: nacos
        password: nacos
        file-extension: yml
        group: DEFAULT_GROUP
        namespace: dev
        # 主配置 > 扩展配置(extension-configs) > 共享配置(shared-configs)
        # 扩展配置
        extension-configs[0]:
          dataId: nacos-config-sentinel-user-ext.yml
        # 共享配置
        shared-configs[0]:
          dataId: common.yml
    stream:
      binders: # 在此设置要绑定的rabbit的服务信息
        defaultRaibbit: # 表示定义的绑定器的名称，用于后面和bindings整合
          type: rabbit # 消息组件类型，枚举值在 classapth:/META-INF/spring.binders文件中,
                      # 比如说引入了spring-cloud-stream-binder-rabbit依赖，在此依赖的包中存在此文件， 其他类型消息组件类似
#          environment: # 消息组件相关环境配置
#            spring:

      bindings:
        userVoOutput: # 这是一个输出通道的名称, 更多解释查看 UserVoSender.java
          destination: userVoTopicExchange
          binder: defaultRaibbit # 设置办定期
          contentType: application/json # 消息类型，默认json
        userVoInput: # 这是一个输出通道的名称, 更多解释查看 UserVoReceiver.java
          destination: userVoTopicExchange
          binder: defaultRaibbit # 设置办定期
          contentType: application/json # 消息类型，默认json
          group: userVoGroup # 消费者分组, 微服务多个实例设置相同分组可以防止不同实例重复消费
          consumer:
            concurrency: 3
  rabbitmq:
    host: tx-sh
    port: 5672
    username: admin
    password: admin
  main:
    allow-bean-definition-overriding: true
feign:
  # 是否开启gzip压缩
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 1024
    response:
      enabled: true
  # 底层切换为OkHttp
  httpclient:
    enabled: false
  okhttp:
    enabled: true




# 暴露端点
management:
  endpoints:
    web:
      exposure:
        # 默认值开放health和info端点。设置*开放所有端点
        include: '*'
  endpoint:
    health:
      show-details: always

#nacos-config:
#  test: value in bootstrap
resttemplate:
  sentinel:
    enabled: true
ribbon:
  eager-load:
    enabled: true
