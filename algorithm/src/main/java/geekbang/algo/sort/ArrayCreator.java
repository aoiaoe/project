package geekbang.algo.sort;

import java.util.Arrays;
import java.util.Random;

public class ArrayCreator {

    public static int[] createArray(int n, int bound){
        int arr[] = new int[n];
        Random random = new Random();
        for (int i = 0; i < n; i++) {
            arr[i] = random.nextInt(bound);
        }
        return arr;
    }

    public static void display(int[] arr){
        System.out.println(Arrays.toString(arr));
    }

    public static int[] _1_00(){
        int[] array = {34, 351, 330, 874, 938, 15, 608, 831, 205, 923, 456, 615, 74, 50, 62, 784, 301, 780, 998, 456, 874, 891, 240, 522, 364, 418, 529, 235, 410, 329, 495, 961, 364, 385, 208, 890, 72, 610, 624, 450, 987, 805, 893, 599, 494, 683, 48, 527, 959, 484, 635, 585, 89, 771, 633, 201, 929, 238, 543, 892, 757, 252, 549, 539, 715, 624, 528, 709, 52, 666, 967, 821, 459, 620, 984, 755, 486, 777, 31, 278, 56, 873, 242, 119, 616, 250, 156, 681, 617, 657, 820, 436, 199, 646, 33, 208, 299, 637, 740, 479};
        return array;
    }

    public static int[] _1_000(){
        int[] array = {872, 118, 364, 445, 971, 319, 607, 160, 529, 84, 494, 425, 324, 160, 768, 128, 407, 11, 795, 779, 111, 944, 639, 296, 242, 296, 324, 178, 543, 367, 317, 122, 613, 328, 144, 257, 72, 224, 821, 784, 134, 68, 100, 789, 231, 168, 468, 298, 147, 278, 758, 579, 989, 983, 360, 932, 429, 496, 565, 957, 380, 227, 321, 907, 280, 201, 219, 748, 383, 450, 595, 390, 369, 857, 99, 516, 702, 350, 481, 414, 326, 481, 122, 836, 143, 840, 35, 520, 433, 725, 537, 741, 158, 799, 32, 527, 125, 643, 593, 432, 285, 416, 924, 324, 142, 876, 517, 586, 692, 957, 147, 904, 157, 248, 979, 162, 186, 0, 99, 582, 98, 955, 539, 983, 89, 319, 550, 763, 415, 700, 829, 523, 317, 798, 517, 32, 3, 346, 95, 556, 493, 810, 253, 748, 756, 743, 557, 192, 712, 674, 438, 779, 419, 543, 582, 574, 937, 278, 654, 92, 172, 767, 597, 721, 787, 961, 121, 612, 922, 880, 221, 502, 526, 929, 76, 333, 767, 347, 44, 346, 799, 27, 381, 604, 761, 939, 640, 270, 443, 257, 365, 964, 262, 904, 524, 629, 36, 197, 5, 61, 881, 936, 355, 34, 553, 13, 620, 89, 257, 134, 580, 477, 786, 895, 422, 259, 561, 709, 924, 764, 66, 868, 558, 424, 890, 987, 78, 563, 659, 318, 596, 239, 554, 736, 158, 990, 892, 723, 471, 714, 567, 78, 352, 580, 342, 809, 533, 125, 620, 968, 614, 619, 242, 762, 925, 828, 91, 661, 279, 448, 220, 223, 163, 110, 913, 563, 736, 318, 859, 47, 860, 670, 246, 398, 694, 987, 334, 167, 549, 926, 953, 888, 562, 152, 831, 824, 767, 603, 807, 240, 563, 287, 980, 173, 782, 414, 284, 286, 263, 805, 280, 60, 213, 727, 655, 466, 449, 919, 926, 346, 515, 74, 618, 218, 908, 526, 318, 945, 592, 299, 704, 490, 126, 781, 869, 868, 328, 611, 197, 563, 877, 895, 769, 479, 566, 370, 897, 438, 694, 275, 130, 681, 386, 252, 349, 456, 855, 738, 90, 227, 139, 135, 483, 390, 700, 869, 429, 455, 589, 496, 169, 31, 15, 753, 762, 11, 404, 963, 990, 623, 207, 436, 287, 78, 751, 586, 876, 160, 713, 815, 752, 167, 917, 250, 452, 496, 769, 715, 232, 475, 106, 851, 460, 599, 506, 414, 797, 446, 307, 414, 20, 575, 817, 597, 888, 438, 797, 919, 451, 900, 557, 73, 938, 580, 809, 938, 342, 292, 441, 84, 728, 900, 483, 871, 570, 998, 256, 75, 680, 537, 254, 551, 132, 44, 680, 763, 553, 260, 761, 694, 848, 594, 695, 717, 814, 676, 196, 329, 415, 654, 409, 931, 531, 997, 259, 647, 310, 632, 303, 282, 638, 635, 849, 514, 725, 825, 600, 329, 183, 381, 622, 412, 477, 541, 107, 198, 999, 916, 201, 772, 897, 843, 507, 853, 116, 235, 942, 8, 909, 681, 449, 562, 787, 398, 161, 282, 666, 170, 117, 619, 852, 269, 817, 798, 879, 241, 94, 329, 250, 991, 285, 903, 729, 957, 828, 101, 664, 641, 562, 167, 803, 261, 28, 237, 524, 663, 818, 37, 182, 627, 43, 126, 462, 207, 253, 670, 570, 811, 490, 505, 978, 331, 244, 166, 698, 922, 504, 159, 561, 164, 304, 630, 644, 673, 379, 279, 700, 753, 311, 6, 294, 448, 879, 829, 905, 744, 751, 345, 778, 821, 444, 570, 987, 961, 977, 325, 698, 229, 211, 368, 509, 712, 510, 778, 868, 631, 969, 524, 431, 121, 389, 32, 406, 654, 99, 980, 799, 676, 787, 683, 778, 501, 56, 849, 121, 560, 664, 312, 795, 970, 866, 572, 824, 785, 808, 71, 902, 901, 236, 801, 857, 251, 935, 392, 314, 664, 140, 80, 694, 886, 788, 16, 711, 62, 394, 465, 408, 82, 286, 347, 354, 629, 647, 573, 748, 138, 65, 161, 399, 246, 543, 834, 255, 483, 362, 922, 485, 65, 607, 853, 73, 187, 14, 76, 109, 868, 206, 942, 245, 876, 623, 114, 747, 995, 440, 745, 375, 744, 558, 323, 571, 318, 790, 1, 916, 804, 193, 451, 828, 879, 174, 413, 53, 959, 822, 986, 848, 547, 9, 573, 484, 321, 62, 264, 930, 702, 7, 908, 348, 22, 826, 811, 862, 401, 916, 765, 788, 915, 385, 597, 659, 381, 607, 495, 605, 677, 216, 832, 220, 295, 333, 882, 319, 654, 831, 203, 610, 436, 361, 305, 399, 129, 42, 340, 763, 315, 111, 927, 124, 499, 853, 709, 286, 944, 228, 860, 397, 466, 135, 529, 20, 13, 999, 448, 860, 615, 391, 213, 408, 816, 91, 964, 557, 757, 658, 89, 799, 65, 378, 581, 127, 177, 258, 334, 257, 674, 154, 18, 49, 314, 919, 104, 349, 39, 84, 827, 70, 391, 714, 331, 184, 942, 359, 634, 537, 454, 621, 840, 190, 294, 697, 3, 833, 961, 644, 14, 575, 665, 686, 293, 190, 832, 790, 154, 651, 315, 262, 591, 225, 572, 739, 25, 6, 570, 627, 214, 511, 695, 223, 195, 316, 189, 840, 692, 470, 502, 630, 72, 709, 560, 403, 79, 910, 865, 517, 4, 242, 308, 723, 297, 746, 95, 703, 748, 469, 56, 153, 172, 4, 420, 869, 791, 341, 900, 483, 788, 163, 325, 516, 431, 791, 970, 68, 55, 448, 48, 875, 392, 893, 198, 933, 389, 763, 31, 177, 758, 659, 469, 943, 289, 810, 787, 954, 40, 524, 231, 734, 447, 355, 610, 771, 505, 553, 861, 647, 734, 21, 275, 793, 643, 793, 477, 625, 974, 786, 478, 926, 764, 682, 875, 344, 440, 160, 382, 596, 690, 326, 72, 845, 298, 282, 72, 63, 328, 750, 77, 422, 930, 787, 939, 78, 49, 322, 734, 44, 888, 507, 704, 937, 777, 326, 448, 87, 174, 543, 786, 356, 809, 31, 412, 988, 41, 277, 524, 451, 121, 323, 540, 231, 447, 469, 559, 179, 806, 204, 459, 465, 224, 817, 467, 215, 11, 293, 151, 226, 158, 565, 226, 360, 513};
        return array;
    }

    public static void isSorted(int[] arr){
        boolean flag = true;
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] < arr[i - 1]) {
                flag = false;
                break;
            }
        }
        System.out.println("数组是否有序：" + (flag ? "是" : "否"));
    }

    public static void main(String[] args) {
//        int arr[] = {393, 480, 3052, 6224, 7322, 7845, 10374, 11264, 11381, 12749, 13012, 13832, 14581, 14890, 15890, 16638, 16974, 17132, 18383, 18840, 19004, 19798, 21529, 21748, 22002, 22845, 23650, 24847, 26924, 27352, 27571, 28580, 28665, 29093, 29794, 31143, 32781, 33434, 33496, 34190, 36039, 37754, 39091, 39233, 39992, 41042, 41048, 41176, 42045, 46323, 47420, 48915, 50948, 52738, 54728, 55145, 55498, 55816, 55827, 60402, 63266, 63939, 64511, 68479, 68690, 70831, 71335, 71858, 72224, 72464, 72698, 72838, 72921, 73647, 74267, 74311, 74770, 76188, 76329, 76837, 77403, 79990, 83828, 84118, 84200, 84232, 85562, 86537, 86772, 87655, 93376, 94323, 94473, 94618, 98773, 98880, 99160, 99797, 104993, 106893, 107774, 108203, 109052, 109132, 109732, 113352, 113443, 114024, 117009, 120257, 121098, 121226, 121635, 122226, 123282, 123653, 124095, 125289, 127176, 127863, 127977, 129302, 129578, 130285, 130600, 130604, 130933, 130994, 131232, 132965, 134378, 136035, 136297, 137979, 144351, 147055, 147772, 151026, 151967, 152700, 153121, 153384, 153990, 157886, 158722, 158971, 160620, 162785, 164243, 166182, 166550, 166994, 167441, 167653, 169060, 170231, 171362, 171761, 172348, 173035, 173462, 174659, 174809, 174911, 177619, 177802, 179927, 180187, 181576, 181942, 182284, 182796, 184311, 185581, 186199, 188737, 189471, 189526, 190616, 190988, 192012, 192367, 192423, 193445, 193788, 194055, 195796, 196144, 196700, 197327, 200226, 201158, 202587, 204769, 206026, 206070, 206699, 206978, 210024, 210064, 210525, 210853, 211710, 212470, 212488, 214158, 214872, 216380, 216954, 217072, 217218, 217924, 219011, 221053, 221283, 221907, 224342, 224409, 225404, 225537, 225561, 225789, 226194, 226207, 227163, 227627, 230086, 233290, 233316, 236701, 238663, 244923, 245964, 246062, 246166, 247534, 248595, 254854, 256204, 258404, 258644, 259128, 259336, 259549, 259862, 260566, 262931, 264474, 264541, 268614, 270149, 270747, 272224, 272594, 273142, 273980, 274541, 276477, 278076, 278390, 279724, 279784, 283316, 283635, 284030, 284771, 285766, 288891, 291050, 292017, 292876, 293682, 293789, 294623, 294740, 294860, 296503, 296621, 296648, 297027, 297071, 297511, 299511, 302753, 303446, 304069, 305975, 306341, 306587, 306702, 307004, 307203, 308804, 311385, 313882, 316586, 318368, 320245, 320651, 320849, 320887, 322154, 322287, 322442, 324788, 325905, 327746, 331104, 331299, 331403, 331546, 333043, 333934, 334441, 336395, 336674, 338200, 338950, 341443, 341837, 343125, 344453, 345061, 345575, 348027, 350253, 350976, 350996, 352416, 353081, 354233, 355368, 357532, 357941, 359536, 359869, 361176, 366727, 367540, 371189, 371818, 371838, 373446, 374881, 375151, 375284, 376892, 377114, 377152, 377700, 378289, 378521, 379530, 379697, 379885, 380514, 381401, 382802, 383018, 384623, 384997, 385240, 385281, 385540, 386293, 388285, 389700, 390945, 392065, 396446, 396950, 397248, 398196, 399775, 401090, 401668, 403100, 403842, 404544, 405723, 405864, 409888, 411510, 412446, 413076, 415396, 417456, 418500, 418556, 420983, 421278, 421869, 423447, 424013, 425911, 426003, 426505, 427138, 429771, 429807, 430733, 431570, 431700, 431864, 432862, 432953, 434034, 434115, 437777, 438867, 439435, 439759, 440545, 441001, 441351, 446786, 447781, 448737, 449062, 451825, 452742, 453334, 453638, 454024, 454349, 454918, 455360, 456964, 458018, 458254, 458601, 459092, 460243, 461887, 462180, 463008, 464494, 464792, 466494, 466689, 467844, 468389, 469796, 470352, 472459, 472568, 473360, 473949, 473998, 474399, 474619, 475076, 475471, 475690, 476838, 476840, 477003, 478989, 478995, 480254, 481006, 481606, 483536, 483847, 483987, 485315, 486175, 486221, 487409, 487717, 487943, 488318, 488349, 489185, 489789, 491609, 492550, 493408, 493686, 493988, 494303, 496981, 499094, 499529, 499883, 500466, 500882, 504448, 505346, 505864, 505868, 506085, 506692, 507819, 509422, 509677, 511115, 513556, 513572, 516581, 517187, 517803, 518491, 520275, 521384, 522125, 522526, 524017, 525191, 526355, 527211, 527234, 528854, 530191, 532282, 533876, 535272, 535475, 536909, 536928, 537955, 538670, 539732, 541709, 541925, 542234, 543694, 545469, 546039, 546396, 547596, 548641, 548861, 549391, 549467, 550663, 550924, 551447, 553292, 553868, 554824, 555573, 555857, 556640, 556643, 559575, 559662, 559733, 561538, 562075, 562249, 564634, 565552, 566357, 566783, 567306, 567368, 567546, 567767, 569184, 569406, 569960, 572320, 574190, 574524, 577046, 577420, 577523, 578780, 578866, 580123, 580243, 580636, 581059, 581080, 582321, 582584, 582774, 583250, 587299, 587756, 588460, 589462, 590909, 591469, 591730, 592169, 592454, 593314, 594901, 595243, 596724, 599406, 600285, 601812, 601881, 602090, 602537, 602924, 603118, 604526, 604822, 605603, 605686, 605831, 607149, 607426, 607445, 608894, 609513, 609926, 610017, 610805, 612234, 612600, 612700, 614753, 616841, 618077, 618964, 619332, 619356, 619371, 619657, 620330, 620948, 624239, 624387, 624768, 624918, 624956, 625331, 629050, 629644, 630544, 631909, 632907, 634005, 635695, 637271, 639885, 640267, 640313, 640464, 640924, 641144, 641560, 643281, 645099, 645361, 645618, 645878, 649205, 649887, 649973, 650127, 650368, 650741, 650978, 651785, 652183, 653553, 654058, 656469, 657793, 659918, 659933, 660885, 661884, 662340, 662371, 664455, 665369, 665495, 666632, 667317, 671361, 672055, 672906, 674479, 676142, 679445, 680485, 681228, 681734, 682151, 684077, 687062, 691429, 692015, 692225, 693942, 694819, 694832, 700059, 700381, 700501, 701378, 703420, 705141, 705794, 707899, 709066, 709358, 709362, 711773, 712142, 712186, 713788, 714425, 714940, 714945, 715740, 716819, 717113, 719718, 720086, 721258, 721529, 722684, 722705, 722773, 724809, 728058, 728569, 729617, 730117, 730263, 730876, 731661, 731875, 732354, 732474, 732895, 734294, 735651, 735684, 736153, 737392, 737475, 737555, 737563, 738752, 738805, 738921, 743241, 743701, 744113, 745719, 746154, 747032, 747665, 748869, 751532, 751974, 752095, 752191, 753029, 755037, 756956, 757514, 758278, 758446, 760425, 760550, 763445, 764642, 764942, 765256, 765865, 766769, 767025, 771444, 773325, 774906, 775206, 775388, 775392, 776271, 777369, 777392, 778095, 778195, 778848, 779745, 780482, 780602, 780969, 783963, 784784, 787969, 788429, 788533, 790408, 790937, 793462, 793798, 793838, 793840, 794880, 795080, 795691, 796160, 796349, 797302, 797740, 798051, 798432, 799377, 801292, 802824, 803579, 805036, 805665, 805706, 805871, 805966, 806693, 806872, 808622, 811466, 812848, 815442, 816433, 817264, 818144, 820799, 822154, 824207, 825699, 826275, 827298, 827470, 828493, 828558, 828785, 829145, 829841, 830760, 831095, 831753, 832216, 834457, 838840, 839202, 840460, 842394, 843445, 845554, 845667, 845791, 846912, 848993, 852084, 852243, 852974, 855072, 855247, 858478, 859157, 860047, 860748, 861575, 861843, 861899, 863427, 863893, 863963, 865286, 867068, 868730, 868775, 871299, 873074, 874004, 874107, 874538, 874764, 874777, 875992, 876490, 876653, 877914, 878790, 878888, 879727, 881597, 883381, 883698, 885532, 888543, 888639, 889132, 889331, 889727, 892955, 893628, 893777, 894508, 895454, 895940, 897853, 899594, 900692, 900762, 902116, 902123, 903108, 903198, 904339, 904948, 904953, 905338, 905413, 905685, 905954, 906868, 909329, 911406, 912150, 915058, 915062, 916090, 916247, 917268, 919465, 919668, 920266, 921842, 923060, 924683, 925524, 927622, 927684, 929042, 932211, 932361, 935338, 936908, 936936, 937892, 938155, 938510, 939075, 940175, 942030, 942563, 942594, 943360, 944545, 945389, 946030, 946077, 946623, 946820, 946867, 946994, 947243, 948208, 949575, 951253, 953142, 954296, 956584, 958677, 959735, 960497, 960676, 961254, 962608, 964226, 964262, 964417, 968457, 969026, 969957, 970162, 971256, 973832, 975437, 975931, 976132, 976208, 976624, 977485, 977592, 979075, 980440, 982278, 982998, 985575, 987085, 987249, 987601, 990199, 990519, 992257, 995229, 995274, 995903};
//        for (int i = 1; i < arr.length; i++) {
//            if(arr[i] < arr[i - 1]){
//                System.out.println("排序出错");
//                break;
//            }
//        }

        display(ArrayCreator.createArray(100, 1000));
    }
}
